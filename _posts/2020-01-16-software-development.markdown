---
layout: post
title:  "기민한 소프트웨어 개발"
date:   2020-01-16 17:00:00 +0900
author: 지민규
categories: Rookie7
---
## 실패한 소프트웨어 프로젝트란?
 계획 대비 인력이 추가 되었거나, 시간이 지연된 프로젝트.

## 소프트웨어 프로젝트가 실패하는 원인

*     요구사항 복잡도
*     요구사항 변동성
*     시장 변동성
*     주어진 납기
*     개발자 전문성

## 폭포수 방법론의 문제점

* 프로세스 진행 중 지속적으로 발생하는 변화에 대응하기 어렵다.
 -> 프로젝트 요구사항과 설계가 변동이 없어야 한다.
 
## 소프트웨어 프로젝트의 특징

*  소프트웨어 프로젝트 = 답을 찾기 위한 시행착오
*  시행착오가 끝나는 시점이 프로젝트의 종료 시점
*  시행착오를 하지 않곘다는 목표는 비현실적
    *  빨리 실패하는 방법을 찾자.
  
## 피드백의 중요성 - TDD(Test Driven Development)

* 구현할 기능에 대해 테스트 작성
* 테스트를 통과할 기능 구현
* 구현 레벨의 계획 - 피드백 순환
* 테스트 케이스 작성 시간을 줄이면 생산력이 올라가게 된다.

## 소프트웨어 프로젝트의 피드백

* 눈으로 봐야 비로소 진짜 요구사항을 발견하게 된다.
    * 기획서만 봐서는 아무것도 알 수 없다.

## 프로젝트의 4개 축

* 기간, 비용, 기능, 품질
* 4개의 축을 모두 고정할 수는 없음.
    * 품질을 움직이면 기간과 기능 모두 위협받을 수 있음
    * 품질을 고정하고 기간과 기능 중 하나를 협상

## 번다운 차트

* 작업의 소멸 속도를 그래프로 나타냄
    *  시각적인 자극을 통해 생산성을 향상시킬 수 있음.


## 사용자 스토리로 요구사항 작성
사용자 스토리란 사용자나 구매자에게 가치를 줄 수 있는 기능을 서술한 것으로, 서술형 기록하며, 계획하거나 기억하기 위한 단서로 사용된다. 대화를 통해 세부사항을 구체화하며, 세부사항을 테스트 케이스로 문서화한다. 

## 사용자 모델링, 에픽(Epic)
#### 사용자 모델링이란
시스템과 상호작용할 사람들을 역할별로 구분한, 집단을 대표하는 사용자. 각 집단의 특성을 적절히 반영해야 한다.
#### 에픽이란
큰 단위의 기능(또는 시스템) 이름을 적어놓은 것.(ex. 메일 읽기, 메일 쓰기) 사용자 스토리를 작성하기 위한 출발점이며 체계적으로 관리할 필요는 없다.


## 스토리 작성법
* 역할에 따른 사용자를 모델링
* 사용자의 행위를 서술
* 자세한 내용은 설명 및 인수 테스트에 추가한다.
---
### 인수 테스트
해당 기능이 기대에 부합하게 개발되었는지를 확인하는 테스트. 사용자 스토리마다 해당 스토리에 대한 인수 테스트를 작성하며, 완료 조건으로 사용한다.

### 스토리카드 앞면
* As a : 해당 스토리를 통해 가치를 얻는 사용자 
* I want : 스토리를 통해 얻고자 하는 가치 및 목표 
* So that : 목표를 달성하기 위해 취할 행동

 ### 스토리카드 뒷면
 * Given : 사용자가 목표 달성을 하기 위해 행동을 시작할 때의 상태
 * When : 사용자의 행동
 * Then : 사용자가 얻는 결과

## 플래닝 포커로 규모 측정하기
### 목적
* 전체 프로젝트 및 각 업무의 크기를 파악하고, 투입할 인력의 수를 가늠하기 위해
* 완료 예정일을 정하기 위해

### 플래닝 포커
* 집단 추정 기법
* 기능 간 상대적 크기를 추정
* 리스크 조기 발견과 이해도 향상에 탁월함


## 느낀점
플래닝 포커를 통해 기능 간 상대적 크기를 팀원들과 함께 추정했다. 학교에서는 주로 백엔드, 프론트엔드 각 부분으로 나누어 개발을 진행했기 때문에 기능의 규모 추정을 경험하지 못했다. 내가 쉽게 개발할 수 있다고 생각하는 기능도 있는 반면, 다른 팀원들이 쉽게 개발할 수 있다고 생각하는 기능들이 있었는데, 각자 그렇게 생각하는 이유를 듣고 합의를 하는 과정이 재밌었다.
